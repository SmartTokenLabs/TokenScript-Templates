<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ts:token 
	xmlns:xml="http://www.w3.org/XML/1998/namespace"
          xmlns:ts="http://tokenscript.org/2024/01/tokenscript"
          xsi:schemaLocation="http://tokenscript.org/2024/01/tokenscript https://www.tokenscript.org/schemas/2024-01/tokenscript.xsd"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:ethereum="urn:ethereum:constantinople"
          xmlns:xhmtl="http://www.w3.org/1999/xhtml"
		  name="erc6672demo">
	<ts:label>
		<ts:plurals xml:lang="en">
			<ts:string quantity="one">erc6672demo Token</ts:string>
			<ts:string quantity="other">erc6672demo Tokens</ts:string>
		</ts:plurals>
	</ts:label>	
	<ts:meta>
		<ts:description xml:lang="en">erc6672demo</ts:description>
		<ts:aboutUrl xml:lang="en">http://demo.com</ts:aboutUrl>
		<ts:iconUrl xml:lang="en">icon.jpg</ts:iconUrl>
	</ts:meta>
	<ts:contract interface="erc721" name="Token">
		<!-- <ts:address network="31337">0x074Cb53660666E3adAc1a86750dF554a77d01Ae1</ts:address> -->
		<ts:address network="80001">0x074Cb53660666E3adAc1a86750dF554a77d01Ae1</ts:address>
		<!-- <ts:address network="31337">0x5FbDB2315678afecb367f032d93F642f64180aa3</ts:address> -->
	</ts:contract>
	<ts:origins>
		<!-- Define the contract which holds the token that the user will use -->
		<ts:ethereum contract="Token"/>
	</ts:origins>

	<ts:selection name="notOperator" filter="isOperator=FALSE">
		<ts:label>
			<ts:string xml:lang="en">Only for Operators. Contact admin to add your address as Operator</ts:string>
		</ts:label>
	</ts:selection>

	<ts:selection name="notOwner" filter="isOwnerAddress=FALSE">
		<ts:label>
			<ts:string xml:lang="en">Only for Contract Owner.</ts:string>
		</ts:label>
	</ts:selection>

	<ts:cards>
		<ts:viewContent name="common" xmlns="http://www.w3.org/1999/xhtml">
			<ts:include type="html" src="./dist/index.html"/>
			<ts:include type="css" src="./src/styles.css"/>
		</ts:viewContent>

		<ts:card type="token" name="Info" origins="Token">
			<ts:label>
				<ts:string xml:lang="en">Info</ts:string>
			</ts:label>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="info">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<ts:card type="token" name="Operators" origins="Token">
			<ts:label>
				<ts:string xml:lang="en">Operators &amp; Redemptions</ts:string>
			</ts:label>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="operators">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<ts:card type="action" name="OperatorRedeem" origins="Token" exclude="notOperator">
			<ts:label>
				<ts:string xml:lang="en">Operator: Redeem</ts:string>
			</ts:label>

			<ts:transaction>
				<ethereum:transaction as="uint" contract="Token" function="redeem">
					<ts:data>
						<ts:bytes32 local-ref="redemptionId"/>
						<ts:uint256 local-ref="redeemTokenId"/>
						<ts:string></ts:string>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>

			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="redeem">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<ts:card type="action" name="OperatorCancel" origins="Token" exclude="notOperator">
			<ts:label>
				<ts:string xml:lang="en">Operator: Cancel Redemption</ts:string>
			</ts:label>
			
			<ts:transaction>
				<ethereum:transaction as="uint" contract="Token" function="cancel">
					<ts:data>
						<ts:bytes32 local-ref="redemptionId"/>
						<ts:uint256 local-ref="redeemTokenId"/>
						<ts:string></ts:string>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="cancel">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<ts:card type="action" name="AddOperator" origins="Token" exclude="notOwner">
			<ts:label>
				<ts:string xml:lang="en">Add New Operator</ts:string>
			</ts:label>
			<ts:transaction>
				<ethereum:transaction as="uint" contract="Token" function="addOperator">
					<ts:data>
						<ts:address local-ref="operator"/>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="addOperator">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<ts:card type="action" name="Mint" exclude="notOwner">
			<ts:label>
				<ts:string xml:lang="en">Mint</ts:string>
			</ts:label>
			<ts:transaction>
				<ethereum:transaction contract="Token" function="mint">
					<ts:data>
						<ts:address local-ref="mintTo"/>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="mint">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

	</ts:cards>
	<ts:attribute name="contractOwner">
		<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.7</ts:syntax></ts:type>
		<ts:origins>
			<ethereum:call function="owner" contract="Token" as="address">
			</ethereum:call>
		</ts:origins>
	</ts:attribute>

	<ts:attribute name="isOwnerAddress">
		<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.7</ts:syntax></ts:type>
		<ts:origins>
			<ethereum:call function="hasRole" contract="Token" as="bool">
				<ts:data>
					<!-- DEFAULT_ADMIN_ROLE -->
					<ts:bytes32>0x0000000000000000000000000000000000000000000000000000000000000000</ts:bytes32>
					<!-- Token owner -->
					<ts:address ref="ownerAddress"/>
				</ts:data>
			</ethereum:call>
		</ts:origins>
	</ts:attribute>

	<ts:attribute name="isOperator">
		<!-- bool -->
		<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.7</ts:syntax></ts:type>
		<ts:origins>
			<ethereum:call function="hasRole" contract="Token" as="bool">
				<ts:data>
					<!-- keccak256("OPERATOR_ROLE") -->
					<ts:bytes32>0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929</ts:bytes32>
					<!-- Token owner -->
					<ts:address ref="ownerAddress"/>
				</ts:data>
			</ethereum:call>
		</ts:origins>
	</ts:attribute>

</ts:token>
