<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ts:token 
	xmlns:xml="http://www.w3.org/XML/1998/namespace"
          xmlns:ts="http://tokenscript.org/2024/01/tokenscript"
          xsi:schemaLocation="http://tokenscript.org/2024/01/tokenscript https://www.tokenscript.org/schemas/2024-01/tokenscript.xsd"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:ethereum="urn:ethereum:constantinople"
          xmlns:xhtml="http://www.w3.org/1999/xhtml"
		  name="erc-721">
	<ts:label>
		<ts:plurals xml:lang="en">
			<ts:string quantity="one">erc-721 Token</ts:string>
			<ts:string quantity="other">erc-721 Tokens</ts:string>
		</ts:plurals>
	</ts:label>
	<ts:meta>
		<ts:description xml:lang="en">Tokenscript for any ERC-721 standard token</ts:description>
		<ts:aboutUrl xml:lang="en">https://www.smartlayer.network/smartcat</ts:aboutUrl>
		<ts:iconUrl xml:lang="en">https://smart-layer-d12f1ja6t-smart-token-labs.vercel.app/smartcat/opengraph-image-3urawq.png?708f218c0ad1b4d7</ts:iconUrl>
	</ts:meta>
	<ts:contract interface="erc721" name="Token">
		<ts:address network="1">0x76be3b62873462d2142405439777e971754e8e77</ts:address>
		<!-- <ts:address network="80001">0x3f1108368cba706990590d15ce7addee8224203b</ts:address> -->
	</ts:contract>
	<ts:origins>
		<!-- Define the contract which holds the token that the user will use -->
		<ts:ethereum contract="Token"/>
	</ts:origins>
	
	<ts:cards>
		<ts:viewContent name="common"
			xmlns="http://www.w3.org/1999/xhtml">
			<ts:include type="html" src="./dist/index.html"/>
			<ts:include type="css" src="./src/styles.css"/>
		</ts:viewContent>

		<ts:card type="token" name="Info" origins="Token">
			<ts:label>
				<ts:string xml:lang="en">Info</ts:string>
			</ts:label>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="info">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<ts:card type="action" name="Transfer" origins="Token">

			<ts:label>
				<ts:string xml:lang="en">Transfer</ts:string>
			</ts:label>

			<ts:transaction>
				<ethereum:transaction contract="Token" function="safeTransferFrom" as="uint">
					<ts:data>
						<ts:address ref="sendingAccountAddress"/>
						<ts:address ref="receivingAccountAddress"/>
						<ts:uint256 ref="tokenId"/>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>

			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="transfer">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>
		
		<ts:card type="action" name="Burn" origins="Token">

			<ts:label>
				<ts:string xml:lang="en">Burn</ts:string>
			</ts:label>

			<ts:transaction>
				<ethereum:transaction contract="Token" function="burn" as="uint">
					<ts:data>
						<ts:uint256 ref="tokenId"/>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>

			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="burn">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

	</ts:cards>

	<ts:attribute name="sendingAccountAddress">
		<ts:type>
			<ts:syntax></ts:syntax>
		</ts:type>
		<ts:label>
			<ts:string xml:lang="en">sending account address</ts:string>
		</ts:label>
		<ts:origins>
			<ts:user-entry as="address"/>
		</ts:origins>
	</ts:attribute>

	<ts:attribute name="receivingAccountAddress">
		<ts:type>
			<ts:syntax></ts:syntax>
		</ts:type>
		<ts:label>
			<ts:string xml:lang="en">receiving account address</ts:string>
		</ts:label>
		<ts:origins>
			<ts:user-entry as="address"/>
		</ts:origins>
	</ts:attribute>

</ts:token>
