<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ts:token xmlns:ts="http://tokenscript.org/2022/09/tokenscript"
		  xmlns:xml="http://www.w3.org/XML/1998/namespace"
		  xsi:schemaLocation="http://tokenscript.org/2022/09/tokenscript https://www.tokenscript.org/schemas/2022-09/tokenscript.xsd"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xmlns:ethereum="urn:ethereum:constantinople"
		  name="erc-6551-template">
	<ts:label>
		<ts:plurals xml:lang="en">
			<ts:string quantity="one">erc-6551 template Token</ts:string>
			<ts:string quantity="other">erc-6551 template Tokens</ts:string>
		</ts:plurals>
	</ts:label>
	<ts:meta>
		<ts:description xml:lang="en">ERC-6551 template demonstrating key functionalities of the standard.</ts:description>
		<ts:aboutUrl xml:lang="en">https://tokenbound.org/</ts:aboutUrl>
		<ts:iconUrl xml:lang="en">https://tokenbound.org/image.jpg</ts:iconUrl>
	</ts:meta>
	<ts:contract interface="erc721" name="Token">
		<ts:address network="5">0xc361201E5B1005cCDE47B32F223BC145DE393F62</ts:address>
	</ts:contract>
	<ts:contract name="tokenBoundAccountRegistryGoerli">
		<ts:address network="5">0x000000006551c19487814612e58FE06813775758</ts:address>
	</ts:contract>
	<ts:contract name="tokenBoundImpementationGoerli">
		<ts:address network="5">0x41C8f39463A868d3A88af00cd0fe7102F30E44eC</ts:address>
	</ts:contract>
	<ts:contract name="tokenBoundAccountProxyGoerli">
		<ts:address network="5">0x55266d75D1a14E4572138116aF39863Ed6596E7F</ts:address>
	</ts:contract>
	<ts:origins>
		<!-- Define the contract which holds the token that the user will use -->
		<ts:ethereum contract="Token"/>
	</ts:origins>

	<ts:cards>
		<ts:viewContent name="common" xmlns="http://www.w3.org/1999/xhtml">
			<ts:include type="html" src="./dist/index.html"/>
			<ts:include type="css" src="./src/styles.css"/>
		</ts:viewContent>

		<ts:card type="token" name="Info" origins="Token">
			<ts:label>
				<ts:string xml:lang="en">Info</ts:string>
			</ts:label>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="info">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>
		
		<ts:card type="action" name="SendEth" origins="Token">
			<ts:label>
				<ts:string xml:lang="en">Send ETH</ts:string>
			</ts:label>

			<ts:attribute name="sendEthToAccount">
				<ts:type>
					<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
				</ts:type>
				<ts:origins>
					<ts:user-entry as="utf8"/>
				</ts:origins>
			</ts:attribute>

			<ts:attribute name="sendEthAccountValue">
				<ts:type>
					<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
				</ts:type>
				<ts:origins>
					<ts:user-entry as="uint"/>
				</ts:origins>
			</ts:attribute>

			<ts:attribute name="sendEthData">
				<ts:type>
					<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
				</ts:type>
				<ts:origins>
					<ts:user-entry as="bytes"/>
				</ts:origins>
			</ts:attribute>

			<!-- execute payableAmount (ether) as Wei / 0.000001 eth -->
			<!-- to (address) -->
			<!-- value (uint256) // Value to send with operation -->
			<!-- data (bytes) (Encoded calldata of operation) -->
			<!-- operation (uint8) (Operation type (0=CALL, 1=DELEGATECALL, 2=CREATE, 3=CREATE2)) -->
			<ts:transaction>
				<ethereum:transaction function="execute" contract="tokenBoundImpementationGoerli" as="bool">
					<ts:data>
						<ts:uint256>1000000000000</ts:uint256>
						<ts:address local-ref="sendEthToAccount" />
						<ts:uint256 local-ref="sendEthAccountValue" />
						<ts:bytes local-ref="sendEthData" />
						<ts:uint8>0</ts:uint8>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>

			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="sendEth">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

		<ts:card type="action" name="SendErc20" origins="Token">
			<ts:label>
				<ts:string xml:lang="en">Send ERC20</ts:string>
			</ts:label>

			<ts:attribute name="sendERC20Chain">
				<ts:type>
					<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
				</ts:type>
				<ts:origins>
					<ts:user-entry as="utf8"/>
				</ts:origins>
			</ts:attribute>
			
			<ts:attribute name="sendEthFromAccount">
				<ts:type>
					<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
				</ts:type>
				<ts:origins>
					<ts:user-entry as="utf8"/>
				</ts:origins>
			</ts:attribute>

			<ts:attribute name="sendEToAccount">
				<ts:type>
					<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
				</ts:type>
				<ts:origins>
					<ts:user-entry as="utf8"/>
				</ts:origins>
			</ts:attribute>

			<ts:attribute name="sendEthAccountValue">
				<ts:type>
					<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
				</ts:type>
				<ts:origins>
					<ts:user-entry as="uint"/>
				</ts:origins>
			</ts:attribute>

			<ts:attribute name="sendEthData">
				<ts:type>
					<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
				</ts:type>
				<ts:origins>
					<ts:user-entry as="utf8"/>
				</ts:origins>
			</ts:attribute>
			
			<ts:attribute name="erc20ContractAddress">
				<ts:type>
					<ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
				</ts:type>
				<ts:origins>
					<ts:user-entry as="utf8"/>
				</ts:origins>
			</ts:attribute>

			<ts:transaction>
				<ethereum:transaction function="execute" contract="tokenBoundImpementationGoerli" as="bool">
					<ts:data>
						<ts:address local-ref="sendEthFromAccount"/>
						<ts:address local-ref="sendEthToAccount"/>
						<ts:string local-ref="sendEthAccountValue"/>
						<ts:bytes32>0x0000000000000000000000000000000000000000000000000000000000000000</ts:bytes32>
					</ts:data>
				</ethereum:transaction>
			</ts:transaction>

			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" urlFragment="sendErc20">
				<ts:viewContent name="common"/>
			</ts:view>
		</ts:card>

	</ts:cards>

</ts:token>
